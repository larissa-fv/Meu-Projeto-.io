name: CI

on: [push]

# Definindo variáveis de ambiente com dados sensíveis
env:
  CI_DOCKERHUB_USER: ${{ secrets.CI_DOCKERHUB_USER }}
  CI_DOCKERHUB_PASSWORD: ${{ secrets.CI_DOCKERHUB_PASSWORD }}
  CI_SNYK_AUTH_TOKEN: ${{ secrets.CI_SNYK_AUTH_TOKEN }}
  CI_SNYK_ORG: ${{ secrets.CI_SNYK_ORG }}
  CI_TELEGRAM_TOKEN: ${{ secrets.CI_TELEGRAM_TOKEN }}
  CI_TELEGRAM_CHAT_ID: ${{ secrets.CI_TELEGRAM_CHAT_ID }}

jobs:
  build-job:
    runs-on: ubuntu-latest
    steps:
      # Faz download da última versão do código no repositório
      - uses: actions/checkout@v4
      # Faz build criando uma nova imagem com o código atualizado
      - run: docker build -t $CI_DOCKERHUB_USER/devops-as2-grupo20 .
      # Faz login no docker hub
      - run: docker login -u $CI_DOCKERHUB_USER -p $CI_DOCKERHUB_PASSWORD
      # Sobe a imagem criada no docker hub
      - run: docker push $CI_DOCKERHUB_USER/devops-as2-grupo20

  test-job:
    # Faz com que seja executado somente após o build-job
    needs: build-job
    runs-on: ubuntu-latest
    steps:
      # Faz download da última versão do código no repositório
      - uses: actions/checkout@v4
      # Faz download do executável do snyk
      - run: curl https://static.snyk.io/cli/latest/snyk-linux -o snyk
      # Fornece permissão para executar o snyk
      - run: chmod +x ./snyk
      # Autentica o snyk
      - run: ./snyk auth $CI_SNYK_AUTH_TOKEN
      # Roda os testes SAST (Static Code Analysis)
      - run: ./snyk code test --org=$CI_SNYK_ORG

  deploy-job:
    # Faz com que seja executado somente após o test-job
    needs: test-job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: chmod +x telegram.sh
      - run: ./telegram.sh
      - run: echo "Enviada mensagem para o Telegram!"
      